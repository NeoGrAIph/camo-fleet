{{- if .Values.workerVnc.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "camofleet.workerVnc.fullname" . }}
  labels:
    app: {{ include "camofleet.workerVnc.fullname" . }}
{{ include "camofleet.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.workerVnc.replicas }}
  selector:
    matchLabels:
      app: {{ include "camofleet.workerVnc.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ include "camofleet.workerVnc.fullname" . }}
        camofleet-role: worker-vnc
{{ include "camofleet.selectorLabels" . | indent 8 }}
      {{- with .Values.workerVnc.podAnnotations }}
      annotations:
{{ toYaml . | indent 8 }}
      {{- end }}
    spec:
{{ include "camofleet.imagePullSecrets" . | indent 6 }}
{{- $wsMin := int .Values.workerVnc.vncPortRange.ws.min }}
{{- $wsMax := int .Values.workerVnc.vncPortRange.ws.max }}
{{- $rawMin := int .Values.workerVnc.vncPortRange.raw.min }}
{{- $rawMax := int .Values.workerVnc.vncPortRange.raw.max }}
{{- $httpPort := int .Values.workerVnc.service.port }}
{{- $gatewayPort := int .Values.workerVnc.gatewayPort }}
{{- if gt $wsMin $wsMax }}
  {{- fail (printf "workerVnc.vncPortRange.ws.min (%d) must be <= ws.max (%d)" $wsMin $wsMax) }}
{{- end }}
{{- if gt $rawMin $rawMax }}
  {{- fail (printf "workerVnc.vncPortRange.raw.min (%d) must be <= raw.max (%d)" $rawMin $rawMax) }}
{{- end }}
{{- $overlap := and (le $wsMin $rawMax) (le $rawMin $wsMax) }}
{{- if $overlap }}
  {{- fail (printf "workerVnc VNC port ranges overlap: ws %d-%d vs raw %d-%d" $wsMin $wsMax $rawMin $rawMax) }}
{{- end }}
{{- if and (ge $httpPort $wsMin) (le $httpPort $wsMax) }}
  {{- fail (printf "workerVnc.service.port (%d) overlaps ws range %d-%d" $httpPort $wsMin $wsMax) }}
{{- end }}
{{- if and (ge $httpPort $rawMin) (le $httpPort $rawMax) }}
  {{- fail (printf "workerVnc.service.port (%d) overlaps raw range %d-%d" $httpPort $rawMin $rawMax) }}
{{- end }}
{{- if and (ge $gatewayPort $rawMin) (le $gatewayPort $rawMax) }}
  {{- fail (printf "workerVnc.gatewayPort (%d) overlaps raw range %d-%d" $gatewayPort $rawMin $rawMax) }}
{{- end }}
      containers:
        - name: runner
          image: {{ include "camofleet.image" (dict "Values" .Values "repository" .Values.workerVnc.runnerImage.repository "tag" .Values.workerVnc.runnerImage.tag) }}
          imagePullPolicy: {{ .Values.workerVnc.runnerImage.pullPolicy }}
          env:
            - name: RUNNER_PORT
              value: "{{ .Values.workerVnc.runnerPort }}"
            - name: RUNNER_VNC_WS_BASE
              value: ws://localhost:{{ .Values.workerVnc.gatewayPort }}
            - name: RUNNER_VNC_HTTP_BASE
              value: http://localhost:{{ .Values.workerVnc.gatewayPort }}
            - name: RUNNER_VNC_PORT_MIN
              value: "{{ .Values.workerVnc.vncPortRange.raw.min }}"
            - name: RUNNER_VNC_PORT_MAX
              value: "{{ .Values.workerVnc.vncPortRange.raw.max }}"
            - name: RUNNER_VNC_WS_PORT_MIN
              value: "{{ .Values.workerVnc.vncPortRange.ws.min }}"
            - name: RUNNER_VNC_WS_PORT_MAX
              value: "{{ .Values.workerVnc.vncPortRange.ws.max }}"
{{- with .Values.workerVnc.runnerExtraEnv }}
{{ toYaml . | indent 12 }}
{{- end }}
          ports:
            - containerPort: {{ .Values.workerVnc.runnerPort }}
              name: runner-http
{{- $rawUpper := int (add $rawMax 1) }}
{{- range $port := untilStep $rawMin $rawUpper 1 }}
            - containerPort: {{ $port }}
              name: {{ printf "vnc-raw-%d" $port }}
{{- end }}
          resources:
{{ toYaml .Values.workerVnc.runnerResources | indent 12 }}
        - name: gateway
          image: {{ include "camofleet.image" (dict "Values" .Values "repository" .Values.workerVnc.gatewayImage.repository "tag" .Values.workerVnc.gatewayImage.tag) }}
          imagePullPolicy: {{ .Values.workerVnc.gatewayImage.pullPolicy }}
          env:
            - name: VNCGATEWAY_PORT
              value: "{{ .Values.workerVnc.gatewayPort }}"
            - name: VNCGATEWAY_RUNNER_HOST
              value: "localhost"
            - name: VNCGATEWAY_RUNNER_PATH_PREFIX
              value: "/vnc"
            - name: VNCGATEWAY_MIN_PORT
              value: "{{ .Values.workerVnc.vncPortRange.ws.min }}"
            - name: VNCGATEWAY_MAX_PORT
              value: "{{ .Values.workerVnc.vncPortRange.ws.max }}"
{{- with .Values.workerVnc.gatewayExtraEnv }}
{{ toYaml . | indent 12 }}
{{- end }}
          ports:
            - containerPort: {{ .Values.workerVnc.gatewayPort }}
              name: vnc-ws
          resources:
{{ toYaml .Values.workerVnc.gatewayResources | indent 12 }}
        - name: worker
          image: {{ include "camofleet.image" (dict "Values" .Values "repository" .Values.workerVnc.image.repository "tag" .Values.workerVnc.image.tag) }}
          imagePullPolicy: {{ .Values.workerVnc.image.pullPolicy }}
          env:
            - name: WORKER_RUNNER_BASE_URL
              value: http://localhost:{{ .Values.workerVnc.runnerPort }}
            - name: WORKER_SUPPORTS_VNC
              value: "true"
{{- if hasKey .Values.workerVnc.sessionDefaults "headless" }}
            - name: WORKER_SESSION_DEFAULTS__HEADLESS
              value: "{{ .Values.workerVnc.sessionDefaults.headless }}"
{{- end }}
{{- with .Values.workerVnc.extraEnv }}
{{ toYaml . | indent 12 }}
{{- end }}
          ports:
            - containerPort: {{ .Values.workerVnc.service.port }}
              name: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
{{ toYaml .Values.workerVnc.resources | indent 12 }}
{{- end }}
