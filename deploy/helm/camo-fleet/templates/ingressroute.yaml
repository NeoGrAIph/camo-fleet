{{- if .Values.ingress.enabled }}
{{- $host := required "ingress.host must be provided when ingress.enabled is true" .Values.ingress.host | trim }}
{{- $className := .Values.ingress.className | trim }}
{{- $entryPoints := default (list) .Values.ingress.entryPoints }}
{{- $globalMiddlewares := default (list) .Values.ingress.middlewares }}
{{- $routes := .Values.ingress.routes | default dict }}
{{- $uiRoute := mergeOverwrite (dict "enabled" true "pathPrefix" "/" "middlewares" (list)) (index $routes "ui" | default dict) }}
{{- $controlRoute := mergeOverwrite (dict "enabled" true "pathPrefix" "/api" "middlewares" (list)) (index $routes "control" | default dict) }}
{{- $uiPath := default "/" $uiRoute.pathPrefix }}
{{- if not (hasPrefix $uiPath "/") }}
{{- fail (printf "ingress.routes.ui.pathPrefix (%s) must start with '/'" $uiPath) }}
{{- end }}
{{- $controlPath := default "/api" $controlRoute.pathPrefix }}
{{- if not (hasPrefix $controlPath "/") }}
{{- fail (printf "ingress.routes.control.pathPrefix (%s) must start with '/'" $controlPath) }}
{{- end }}
{{- $uiMiddlewares := concat $globalMiddlewares (default (list) $uiRoute.middlewares) }}
{{- $controlMiddlewares := concat $globalMiddlewares (default (list) $controlRoute.middlewares) }}
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: {{ include "camofleet.fullname" . }}
  labels:
    app: {{ include "camofleet.fullname" . }}
{{ include "camofleet.labels" . | indent 4 }}
{{- if $className }}
  annotations:
    kubernetes.io/ingress.class: {{ $className | quote }}
{{- end }}
spec:
{{- if $entryPoints }}
  entryPoints:
{{ toYaml $entryPoints | indent 4 }}
{{- end }}
  routes:
{{- if $uiRoute.enabled }}
    - match: Host(`{{ $host }}`) && PathPrefix(`{{ $uiPath }}`)
      kind: Rule
{{- if $uiMiddlewares }}
      middlewares:
{{- range $uiMiddlewares }}
        - name: {{ .name | quote }}
{{- if .namespace }}
          namespace: {{ .namespace | quote }}
{{- end }}
{{- end }}
{{- end }}
      services:
        - name: {{ include "camofleet.ui.fullname" . }}
          port: {{ .Values.ui.service.port | int }}
{{- end }}
{{- if $controlRoute.enabled }}
    - match: Host(`{{ $host }}`) && PathPrefix(`{{ $controlPath }}`)
      kind: Rule
{{- if $controlMiddlewares }}
      middlewares:
{{- range $controlMiddlewares }}
        - name: {{ .name | quote }}
{{- if .namespace }}
          namespace: {{ .namespace | quote }}
{{- end }}
{{- end }}
{{- end }}
      services:
        - name: {{ include "camofleet.control.fullname" . }}
          port: {{ .Values.control.service.port | int }}
{{- end }}
{{- $tls := .Values.ingress.tls | default dict }}
{{- $tlsEnabled := or ($tls.enabled) ($tls.secretName) ($tls.certResolver) }}
{{- if $tlsEnabled }}
  tls:
{{- if $tls.secretName }}
    secretName: {{ $tls.secretName | quote }}
{{- end }}
{{- if $tls.certResolver }}
    certResolver: {{ $tls.certResolver | quote }}
{{- end }}
{{- end }}
{{- end }}
