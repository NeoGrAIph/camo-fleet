global:
  imageRegistry: ""
  imagePullSecrets: []

ingress:
  enabled: false
  host: ""
  className: ""
  entryPoints:
    - websecure
  middlewares: []
    # - name: traefik-auth
    #   namespace: traefik
  tls:
    enabled: false
    secretName: ""
    certResolver: ""
  routes:
    ui:
      enabled: true
      pathPrefix: /
      middlewares: []
    control:
      enabled: true
      pathPrefix: /api
      middlewares: []

control:
  replicas: 1
  image:
    repository: camofleet-control
    tag: latest
    pullPolicy: IfNotPresent
  podAnnotations: {}
  resources: {}
  extraEnv: []
  service:
    type: ClusterIP
    port: 9000
  publicApiPrefix: /api
  config:
    # Leave "workers" unset (null) to use the in-cluster services that are generated
    # from the enabled worker deployments. Override this array only when the
    # control plane should talk to external runners.
    workers: null
    # Control plane VNC endpoints default to the public overrides declared under
    # workerVnc.controlOverrides. Set the entries there to match your ingress or
    # set them to null to use the in-cluster service URLs instead.

ui:
  replicas: 1
  image:
    repository: camofleet-ui
    tag: latest
    pullPolicy: IfNotPresent
  podAnnotations: {}
  resources: {}
  controlHost: ""
  service:
    type: ClusterIP
    port: 80

worker:
  enabled: true
  replicas: 1
  runnerImage:
    repository: camofleet-runner
    tag: latest
    pullPolicy: IfNotPresent
  runnerResources: {}
  runnerExtraEnv: []
  image:
    repository: camofleet-worker
    tag: latest
    pullPolicy: IfNotPresent
  podAnnotations: {}
  resources: {}
  runnerPort: 8070
  service:
    type: ClusterIP
    port: 8080
  supportsVnc: false
  sessionDefaults:
    headless: true
  extraEnv: []

workerVnc:
  enabled: true
  replicas: 1
  runnerImage:
    repository: camofleet-runner-vnc
    tag: latest
    pullPolicy: IfNotPresent
  runnerResources: {}
  runnerExtraEnv: []
  image:
    repository: camofleet-worker
    tag: latest
    pullPolicy: IfNotPresent
  podAnnotations: {}
  resources: {}
  runnerPort: 8070
  service:
    type: ClusterIP
    port: 8080
  vncPortRange:
    ws:
      min: 6900
      max: 6904
    raw:
      min: 5900
      max: 5904
  traefikService:
    enabled: false
  ingressRoute:
    enabled: false
    host: ""
    className: ""
    entryPoints:
      - websecure
    pathPrefix: /vnc
    middlewares: []
      # - name: traefik-auth
      #   namespace: traefik
    stripPrefixRegex:
      enabled: true
      pattern: ""
      name: ""
    tls:
      enabled: false
      secretName: ""
      certResolver: ""
  extraEnv: []
  sessionDefaults: {}
  controlOverrides:
    ws: null
    http: null
